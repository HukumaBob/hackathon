# Generated by Django 4.2.4 on 2024-04-13 09:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('additions', '0006_alter_city_country_id_alter_city_name_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('user_photo', models.ImageField(blank=True, upload_to='user_photo/', verbose_name='User Photo')),
                ('agreement_required', models.BooleanField(default=True, verbose_name='Agreement Required')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(max_length=255, verbose_name='Experience')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=255, verbose_name='Specialization')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone')),
                ('place_of_work', models.CharField(blank=True, max_length=255, verbose_name='Place of Work')),
                ('position', models.CharField(blank=True, max_length=255, verbose_name='Position')),
                ('online', models.BooleanField(default=False, verbose_name='Online')),
                ('agreement_optional', models.BooleanField(default=False, verbose_name='Agreement Optional')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('hobby', models.TextField(blank=True, null=True, verbose_name='Hobby')),
                ('values', models.TextField(blank=True, null=True, verbose_name='Values')),
                ('aims', models.TextField(blank=True, null=True, verbose_name='Aims')),
                ('cv', models.TextField(blank=True, null=True, verbose_name='CV')),
                ('motivation', models.TextField(blank=True, null=True, verbose_name='Motivation')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.country', verbose_name='Country')),
                ('education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.education', verbose_name='Education')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.experience', verbose_name='Experience')),
                ('familystatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.familystatus', verbose_name='Family Status')),
                ('income', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.income', verbose_name='Income')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='additions.notification', verbose_name='Notification')),
                ('specialization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.specialization', verbose_name='Specialization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
